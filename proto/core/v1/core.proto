syntax = "proto3";

package control.core.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/dan9186/control-api/api/core/v1;corepb";


service CoreService {
  rpc Subscribe(SubscribeRequest) returns (SubscribeResponse) {
    option (google.api.http) = {
      post: "/core/v1/subscribe"
      body: "*"
    };
  }

  rpc EventTopic(EventMessage) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/core/v1/event"
      body: "*"
    };
  }
}

message SubscribeRequest {
  string subscriber_id = 1 [
    (validate.rules).string.uuid = true
  ];

  string name = 2 [
    (validate.rules).string.min_len = 1
  ];

  Listener listener = 3 [
    (validate.rules).message.required = true
  ];
}

message SubscribeResponse {
  string subscription_id = 1;
}

message Listener {
  int32 port = 1 [
    (validate.rules).int32 = {
      gt: 2000,
      lte: 65353,
    }
  ];

  string match_regex = 2;
}

message EventMessage {
  oneof event_type {
    option (validate.required) = true;

    Event event = 1;
    EventResponse response = 2;
  }
}

message EventResponse {
  string response_id = 1 [
    (validate.rules).string.uuid = true
  ];
  Event event = 2;
}

message Event {
  map<string, string> headers = 1;
  bytes body = 2;
  google.protobuf.Timestamp created = 3;
}
